#!/usr/bin/env ruby
# frozen_string_literal: true

require 'bundler/setup'
require 'cosensee'

require 'async'
require 'async/http/endpoint'
require 'console'
require 'falcon'
require 'mini_mime'
require 'uri'

require_relative '../lib/cosensee/web_server/static_file_handler'

DIRECTORY_TO_SERVE = './public'

logger = Console.logger

filename = ARGV[0]

if filename
  logger.info("build #{filename}...")
  project = Cosensee::Project.parse_file(filename)
  Cosensee::HtmlBuilder.new(project).build_all
  logger.info('build done.')
end

endpoint = Async::HTTP::Endpoint.parse('http://localhost:1212')
handler = Cosensee::WebServer::StaticFileHandler.new(dir: DIRECTORY_TO_SERVE, logger:)
app = Falcon::Server.middleware(handler)
server = Falcon::Server.new(app, endpoint)

begin
  Async do |task|
    logger.info("Serving files from #{File.expand_path(DIRECTORY_TO_SERVE)} at http://localhost:1212")

    Signal.trap('INT') do
      logger.info("\nShutting down the server...")
      task.stop
    end

    server.run
  end
rescue Interrupt
  logger.warn("\nServer interrupted. Exiting.")
ensure
  logger.info('Cleanup complete.')
end
