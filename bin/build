#!/usr/bin/env ruby
# frozen_string_literal: true

require 'bundler/setup'
require 'cosensee'

require 'console'
require 'dotenv'
require 'optparse'

Dotenv.load
logger = Console.logger

options = {}

begin
  opts = OptionParser.new
  opts.banner = 'Usage: bin/build [-f <filename>] [-r <project_name>]'

  opts.on('-f FILE', '--file FILE', 'Specify the file name') do |file|
    options[:file] = file
  end

  opts.on('-r NAME', '--remote NAME', 'Retrieve the file from the remote page-data API') do |name|
    options[:remote] = name
  end

  opts.parse!
rescue OptionParser::MissingArgument => e
  logger.error "option requires an argument: #{e.args.join(' ')}"
  logger.error opts.help
  exit 1
end

filename = options[:file]

unless filename
  logger.error 'Error: You must specify a file with -f.'
  exit 1
end

if options[:remote]
  project_name = options[:remote]
  sid = ENV['CONNECT_SID']

  unless sid
    logger.error 'Error: You must set CONNECT_ID as environment variable.'
    exit 1
  end

  logger.info 'Retrieving file from remote API...'
  Cosensee::Api::PageData.new.download(project_name:, sid:, filename:)
  logger.info "File retrieved and saved as: #{filename}"
elsif !File.exist?(filename)
  logger.error "Error: File not found - #{filename}"
  exit 1
end

logger.info "Processing file: #{filename}"

project = Cosensee::Project.parse_file(filename)
builder = Cosensee::HtmlBuilder.new(project)
builder.build_all

logger.info 'Build all files.'
